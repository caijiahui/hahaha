@model advt.CMS.Models.ExamModel.ExamRuleModel

    @{
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    <link href="~/Scripts/jquery-ui.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <link href="~/Scripts/elementUI/lib/theme-chalk/index.css" rel="stylesheet" />
<style>
    .topie {
        width: 50px;
    }
</style>
    <div id="app">
        <div>
            <el-button @@click="createRule">新增</el-button>
            <el-table :data="tableData.filter(data => !search || data.RuleName.toLowerCase().includes(search.toLowerCase())||data.TypeName.toLowerCase().includes(search.toLowerCase())||data.SubjectName.toLowerCase().includes(search.toLowerCase()))"
                      style="width: 100% " :default-sort="{prop: 'RuleName'||'TypeName'||'SubjectName', order: 'CreateUser'}">
                <el-table-column label="规则名字" prop="RuleName" sortable width="120"></el-table-column>
                <el-table-column label="考试类型" prop="TypeName" sortable width="120"></el-table-column>
                <el-table-column label="考试科目" prop="SubjectName" sortable width="120"></el-table-column>
                <el-table-column label="总分" prop="TotalScore" sortable width="120"></el-table-column>
                <el-table-column label="总时长" prop="TotalTime" sortable width="120"></el-table-column>
                <el-table-column label="总题" prop="TotalSubject" sortable width="120"></el-table-column>
                <el-table-column label="通过分数" prop="PassScore" sortable width="120"></el-table-column>
                @*<el-table-column label="是否批阅" prop="IsRead" sortable width="120"></el-table-column>
            <el-table-column label="是否重考" prop="IsRepeat" sortable width="120"></el-table-column>
            <el-table-column label="开头" prop="StartDeac" sortable width="120"></el-table-column>
            <el-table-column label="结尾" prop="EndDesc" sortable width="120"></el-table-column>*@
                <el-table-column align="right">
                    <template slot="header" slot-scope="scope">
                        <el-input v-model="search" size="mini" placeholder="输入关键字搜索" style="width:200px" />
                    </template>
                    <template slot-scope="scope">
                        <el-button size="mini"
                                   @@click="handleEdit(scope.row.ID,scope.row.RuleName,scope.row.TypeName,scope.row.SubjectName,scope.row)">Edit</el-button>
                        <el-button size="mini"
                                   type="danger"
                                   @@click="handleDelete(scope.row.ID, scope.row)">Delete</el-button>
                    </template>
                </el-table-column>
            </el-table>
            <el-pagination @@size-change="handleSizeChange"
                           @@current-change="handleCurrentChange"
                           :current-page="paginations.page_index"
                           :page-sizes="paginations.page_sizes"
                           :page-size="paginations.page_size"
                           :layout="paginations.layout"
                           :total="paginations.total">
            </el-pagination>
            <el-dialog title="考试规则编辑" :visible.sync="dialogFormVisible">
                <el-form :model="VExamRule" ref="dialogForm" :rules="ruleform" :label-position="labelPosition">
                    <el-form-item label="考试类型" prop="TypeName">
                        <el-select v-model="VExamRule.TypeName" placeholder="请选择考试类型">
                            <el-option v-for="item in ListTypeName" :key="item.TypeName" :label="item.TypeName" :value="item.TypeName"></el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item label="考试科目" prop="SubjectName">
                        <el-select v-model="VExamRule.SubjectName" placeholder="请选择考试科目">
                            <el-option v-for="item in ListSubjectName" :key="item.SubjectName" :label="item.SubjectName" :value="item.SubjectName"></el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item label="题目类型" prop="ListTopicInfo">
                        <el-select v-model="topicratioPropsVal" multiple @@change="topicratioPropsFn" placeholder="请选择">
                            <el-option v-for="item in ListTopicInfo"
                                       :key="item.ID"
                                       :label="item.TopicMajor+item.TopicLevel+item.TopicType"
                                       :value="item.ID">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <template>
                        <el-table :data="RuleGrList" style="width:100%">
                            <el-table-column prop="TopicMajor" label="类型" width="80"></el-table-column>
                            <el-table-column prop="TopicLevel" label="等级" width="80"></el-table-column>
                            <el-table-column prop="TopicType" label="题型" width="80"></el-table-column>
                            <el-table-column prop="TopicNum" label="分数" width="80">
                                <template slot-scope="scope">
                                    <el-input v-model="scope.row.TopicNum" class="topie"></el-input>
                                </template>
                            </el-table-column>
                            <el-table-column prop="TopicScore" label="题数" width="80">
                                <template slot-scope="scope">
                                    <el-input v-model="scope.row.TopicScore" class="topie"></el-input>
                                </template>
                            </el-table-column>

                            <el-table-column label="操作" width="120">
                                <template slot-scope="scope">
                                    <el-button @@click.native.prevent="deleteRow(scope.$index,RuleGrList)"
                                               type="text"
                                               size="small">
                                        移除
                                    </el-button>
                                </template>
                            </el-table-column>
                        </el-table>
                    </template>
                    <el-form-item label="规则名" prop="RuleName">
                        <el-input v-model="VExamRule.RuleName"></el-input>
                    </el-form-item>
                    <el-form-item label="总分" prop="TotalScore">
                        <el-input v-model="VExamRule.TotalScore"></el-input>
                    </el-form-item>
                    <el-form-item label="总时长" prop="TotalTime">
                        <el-input v-model="VExamRule.TotalTime"></el-input>
                    </el-form-item>
                    <el-form-item label="总题数" prop="TotalSubject">
                        <el-input v-model="VExamRule.TotalSubject"></el-input>
                    </el-form-item>
                    <el-form-item label="通过分数" prop="PassScore">
                        <el-input v-model="VExamRule.PassScore"></el-input>
                    </el-form-item>
                    <el-form-item label="是否批阅" prop="IsRead">
                        <el-switch v-model="VExamRule.IsRead"></el-switch>
                    </el-form-item>
                    <el-form-item label="是否重考" prop="IsRepeat">
                        <el-switch v-model="VExamRule.IsRepeat"></el-switch>
                    </el-form-item>
                    <el-form-item label="标头" prop="StartDeac">
                        <el-input type="textarea" v-model="VExamRule.StartDeac"></el-input>
                    </el-form-item>
                    <el-form-item label="结尾" prop="EndDesc">
                        <el-input type="textarea" v-model="VExamRule.EndDesc"></el-input>
                    </el-form-item>
                </el-form>
                <div slot="footer" class="dialog-footer">
                    <el-button @@click="dialogFormVisible = false">取 消</el-button>
                    <el-button type="primary" @@click="handleSave">确 定</el-button>
                </div>
            </el-dialog>

        </div>
    </div>
    <script src="~/Scripts/Vue/axios.js"></script>
    <script src="~/Scripts/Vue/Vue.js"></script>
    <script src="~/Scripts/elementUI/lib/index.js"></script>

    <script src="~/Scripts/Vue/polyfill.min.js"></script>
    <script type="text/javascript">
        new Vue({
            el: '#app',
            data: {
                topicratioProps: { multiple: true, label: 'Text', },
                tableData: [],
                dialogFormVisible: false,
                ListTypeName: [],
                VExamRule: [],
                VRuleGrList: [],
                ListTopicInfo:[],
                ListSubjectName:[],
                formLabelWidth: '120px',
                search: '',
                topicratioPropsVal: [],
                RuleGrList: [],
                labelPosition: 'right',
                RuleName: '',
                TotalScore: '',
                TotalTime: '',
                TotalSubject: '',
                PassScore: '',
                ruleform: {                    
                    RuleName: [
                        { required: true, message: '请输入规则名字', trigger: 'blur' }
                    ],
                    TotalScore: [
                        { required: true, message: '请输入总分', trigger: 'blur' }
                    ],
                    TotalTime: [
                        { required: true, message: '请输入考试时长', trigger: 'blur' }
                    ],
                    TotalSubject: [
                        { required: true, message: '请输入题目总数', trigger: 'blur' }
                    ],
                    PassScore: [
                        { required: true, message: '请输入通过分数', trigger: 'blur' }
                    ]
                },
                paginations: {
                    page_index: 1,
                    total: 0,
                    page_size: 5,
                    page_sizes: [5, 10, 15, 20],
                    layout: 'total, sizes, prev, pager, next, jumper'
                },
                allTableData: []
            },
            watch: {
                'VExamRule.TypeName': function (newval) {
                    var _this = this;
                    axios.post('/PEMain/GetSubjectName', {
                        model: newval
                    }).then(response => {
                        _this.ListSubjectName = response.data.ListSubjectName;
                        _this.ListTopicInfo = response.data.ListTopic;
                      });
                },
               
            },
            mounted: function () {
                this.getdata();
               this.getInfoList();
            },
            methods: {
                getInfoList() {
                    var _this = this;
                    axios.post('/PEMain/GetRuleInfo').then(res => {
                        _this.tableData = res.data.tableData;
                        _this.setPaginations()
                    })
                },
                setPaginations() {
                    var _this = this;
                    _this.paginations.total = _this.tableData.length; //数据的数量
                   
                    _this.paginations.page_index = 1; //默认显示第一页
                    _this.paginations.page_size = 5; //每页显示多少数据

                    //显示数据
                    _this.tableData = _this.tableData.filter((item, index) => {
                        return index < _this.paginations.page_size;
                    })
                },
                handleSizeChange(page_size) {
                    var _this = this;
                    _this.paginations.page_index = 1; //第一页
                    _this.paginations.page_size = page_size; //每页先显示多少数据
                    _this.tableData = _this.tableData.filter((item, index) => {
                        return index < page_size
                    })
                },
                handleCurrentChange(page) {

                    var _this = this;
                    axios.post('/PEMain/GetRuleInfo').then(res => {
                        _this.tableData = res.data.tableData;
                        let index = _this.paginations.page_size * (page - 1);
                        //获取总数
                        let allData = _this.paginations.page_size * page;
                        console.log(_this.tableData, index, allData);
                        let tablist = [];
                        for (let i = index; i < allData; i++) {
                            if (_this.tableData[i]) {
                                tablist.push(_this.tableData[i]);
                            }
                        }
                        _this.tableData = tablist;
                    })
                    
                },
                topicratioPropsFn: function (val) {
                    var _this = this;
                    _this.RuleGrList = [];
                    val.forEach(function (lst, num) {
                        _this.ListTopicInfo.forEach(function (item, index) {
                            if (item.ID == lst)
                                _this.RuleGrList.push(item);                            
                        })
                    })

                },
                createRule: function () {
                    var _this = this;
                    axios.post('/PEMain/GetSubjectList').then(response => {
                        _this.ListTypeName = response.data.ListTypeName;
                        _this.VExamRule = {};
                        _this.RuleGrList = [];
                     
                    });
                    _this.dialogFormVisible = true;
                },                  
                handleSave: function () {
                    var _this = this;
                    _this.$refs.dialogForm.validate(function (valid) {
                        if (valid) {         
                            //判读题数分数之和
                            var numscore = 0;
                            _this.RuleGrList.forEach(function (item, index) {
                                numscore += item.TopicNum * item.TopicScore;
                            })
                            if (numscore == 100) {
                                var objs = {};
                                objs.VExamRule = _this.VExamRule;
                                objs.RuleGrList = _this.RuleGrList;
                                axios.post('/PEMain/SaveRuleInfo', {
                                    model: objs,
                                }).then(function (res) {
                                    _this.tableData = res.data.tableData;
                                    _this.RuleGrList = res.data.RuleGrList;
                                    _this.setPaginations();
                                });
                                _this.dialogFormVisible = false;
                            }
                            else { _this.$alert('填入的题数分数之和不可超过100分,请检查') }
                          
                        } else {
                            console.log('error submit!!');
                            return false;
                        }
                    });
                   

                },
                handleEdit(index, RuleName, TypeName, SubjectName, row) {
                    var _this = this;
                    _this.VExamRule.RuleName = row.RuleName;
                    _this.VExamRule.TypeName = row.TypeName;
                    _this.VExamRule.SubjectName = row.SubjectName;
                    _this.VExamRule.TotalScore = row.TotalScore;
                    _this.VExamRule.SubjectName = row.SubjectName;
                    _this.VExamRule.TotalTime = row.TotalTime;
                    _this.VExamRule.TotalSubject = row.TotalSubject;
                    _this.VExamRule.PassScore = row.PassScore;
                    _this.VExamRule.IsRead = row.IsRead;
                    _this.VExamRule.IsRepeat = row.IsRepeat;
                    _this.VExamRule.StartDeac = row.StartDeac;
                    _this.VExamRule.EndDesc = row.EndDesc;
                    _this.VExamRule.ID = index; 
                    axios.post('/PEMain/GetSubjectList', {
                        model: index
                    }).then(response => {
                        _this.ListTypeName = response.data.ListTypeName;
                        _this.RuleGrList = response.data.RuleGrList;
                       
                    });
                    //axios.post('/PEMain/GetSubjectList').then(response => {
                    //    _this.ListTypeName = response.data.ListTypeName;
                    //    _this.RuleGrList = response.data.ListTopic;
                       
                    //});
                    _this.dialogFormVisible = true;
                },
                handleDelete(index, row) {
                    var _this = this;
                    axios.post('/PEMain/DeleteRuleInfo', {
                        model: index
                    }).then(function (res) {
                        _this.tableData = res.data.tableData;
                        _this.setPaginations();
                    });
                },
                getdata: function () {
                    var _this = this;
                    axios.post('/PEMain/GetRuleInfo').then(function (responese) {
                        _this.tableData = responese.data.tableData;
                        _this.VExamRule = responese.data.VExamRule;                        
                        _this.setPaginations();
                    })
                },
                editRow(index, rows) {

                },
                deleteRow(index, rows) {
                    rows.splice(index, 1);
                }
            },

        })

    </script>

