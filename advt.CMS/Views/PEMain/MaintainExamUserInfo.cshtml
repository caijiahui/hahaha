@model advt.CMS.Models.ExamModel.ExamUserInfoModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Scripts/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Scripts/elementUI/lib/theme-chalk/index.css" rel="stylesheet" />
<style>
    .topie {
        width: 50px;
    }
</style>
<div id="app" style="margin-left:20px;margin-right:20px">   
    <template>
        <el-breadcrumb separator="/" style="margin-top:20px;margin-bottom:20px">
            <el-breadcrumb-item>考试管理</el-breadcrumb-item>
            <el-breadcrumb-item>考试动态</el-breadcrumb-item>
        </el-breadcrumb>
    </template>
    <div style="margin-top:20px">
        <template>
            <el-select v-model="VSearch.TypeName" placeholder="请选择考试类型">
                <el-option v-for="item in LExamType" :key="item.Value" :label="item.Value" :value="item.Value"></el-option>
            </el-select>
            <el-input placeholder="搜查工号" v-model="VSearch.UserCode" style="width:200px">
            </el-input>
            <el-input placeholder="搜查部门" v-model="VSearch.DepartCode" style="width:200px">
            </el-input>
            <el-button slot="append" @@click="SearchinByTypeName">Search</el-button>
        </template>
        <template>
            <el-tabs v-model="activeName">
                <el-tab-pane label="上传绩效成绩是否符合要求" name="third">
                </el-tab-pane>
                <el-tab-pane label="系统运算待考试人员名单" name="first">
                </el-tab-pane>
                <el-tab-pane label="HR确认考试人员名单" name="second">
                </el-tab-pane>
            </el-tabs>
        </template>

        <div v-show="activeName=='first'">
            <template>
                <el-button size="small" type="primary" @@click="handlesert()">报名</el-button>
            </template>
            <el-table :data="YListUserInfo" border
                      style="width: 100%;margin-top:20px " border @@selection-change="changeFun">
                <el-table-column type="selection" width="55">

                </el-table-column>
                <el-table-column label="考试类型" prop="TypeName" sortable></el-table-column>
                <el-table-column prop="UserCode"
                                 label="工号">
                </el-table-column>
                <el-table-column label="姓名" prop="UserName" sortable></el-table-column>
                <el-table-column label="部门代码" prop="DepartCode" sortable></el-table-column>
                <el-table-column label="本职等技能" prop="SkillLevel" sortable"></el-table-column>
                <el-table-column label="最高可考技能" prop="HighestTestSkill" sortable"></el-table-column>
                <el-table-column label="本次申请等级" prop="ApplicationLevel" sortable></el-table-column>
            </el-table>
        </div>


        <div v-show="activeName=='second'">
            <div style="float:left;">
                <template>
                    <el-upload class="upload-demo"
                               ref="upload"
                               :multiple="false"
                               :on-success="handleExamSuccess"
                               action="/PEMain/Upload_UserInfo">
                        <el-button size="small" type="primary">批量汇入</el-button>
                    </el-upload>
                </template>
            </div>
            <template>
                <a href="/Attachment/temp/Template/ExamUser.xlsx">
                    <el-button size="small" type="primary" style="margin-top:1px;margin-left:20px">汇入模板</el-button>
                </a>
            </template>
            <template>
                <el-button size="small" type="primary" style="margin-top:1px;margin-left:20px">
                    <a style="color:white" href="/PEMain/SignUpExamExcel">导出</a>
                </el-button>

            </template>


            <el-table :data="CPListUserInfo" border
                      style="width:100%;margin-top:20px;">
                @*<el-table-column type="selection">
                </el-table-column>*@
                <el-table-column fixed
                                 prop="UserCode"
                                 label="工号">
                </el-table-column>
                <el-table-column label="状态"
                                 prop="ExamStatus">
                    <template slot-scope="scope">
                        <el-tag type="success">已报名</el-tag>
                    </template>

                </el-table-column>
                <el-table-column label="考试类型" prop="TypeName" sortable></el-table-column>
                <el-table-column label="姓名" prop="UserName" sortable></el-table-column>
                <el-table-column label="部门代码" prop="DepartCode" sortable></el-table-column>
                <el-table-column label="本职等技能" prop="SkillName" sortable></el-table-column>
                <el-table-column label="最高可考技能" prop="HighestLevel" sortable></el-table-column>
                <el-table-column label="本次申请等级" prop="ApplyLevel" sortable></el-table-column>
                <el-table-column fixed="right"
                                 label="操作">
                    <template slot-scope="scope">

                        <el-button size="mini" @@click="StopComplete(scope.row.ID)">取消</el-button>

                    </template>
                </el-table-column>

            </el-table>
        </div>


        <div v-show="activeName=='third'">

            <div style="margin-top:10px">
                <div style="float:left;">
                    <template>
                        <el-upload class="upload-demo"
                                   ref="upload"
                                   :multiple="false"
                                   :on-success="handleExcelSuccess"
                                   action="/PEMain/Upload_UserAch">
                            <el-button size="small" type="primary">绩效上传</el-button>
                        </el-upload>
                    </template>
                </div>
                <template>
                    <a href="/Attachment/temp/Template/UserAchievement.xlsx">
                        <el-button size="small" type="primary" style="margin-top:1px;margin-left:20px">绩效模板</el-button>
                    </a>
                </template>
                <template>
                    <el-button size="small" type="primary" style="margin-top:1px;margin-left:20px">
                        <a style="color:white" href="/PEMain/ShunFengExcel">导出</a>
                    </el-button>

                </template>

            </div>

            <el-table :data="tableData" border height="600"
                      style="width: 100%;" :default-sort="{prop: 'UserCode'||'UserName', order: 'CreateUser'}">
                <el-table-column prop="UserCode"
                                 label="工号">
                </el-table-column>
                <el-table-column label="姓名" prop="UserName" sortable></el-table-column>
                <el-table-column label="入职日期" width="110">
                    <template slot-scope="scope">
                        <span>{{changeDate(scope.row.EntryDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="部门" prop="DepartCode" sortable></el-table-column>
                <el-table-column label="职等" prop="RankName" sortable></el-table-column>
                <el-table-column label="当下最新职位" prop="PostName" sortable></el-table-column>
                <el-table-column label="入职初始等级" prop="ReverseBuckle" sortable></el-table-column>
                <el-table-column label="考核通过等级" prop="CurrentSkillLevel" sortable></el-table-column>
                <el-table-column label="已经考取技能等级时间" width="110">
                    <template slot-scope="scope">
                        <span v-if="scope.row.LastExamTime!=''&&scope.row.LastExamTime!=null">{{changeMonth(scope.row.LastExamTime)}}</span>
                    </template>
                </el-table-column>
                @*<el-table-column label="最近一次理论考试成绩" prop="ExamScore" sortable></el-table-column>
            <el-table-column label="最近一次通过理论时间" width="110">
                <template slot-scope="scope">
                    <span v-if="scope.row.LastExamTime!=''&&scope.row.LastExamTime!=null">{{changeDate(scope.row.LastExamTime)}}</span>
                </template>
            </el-table-column>
            <el-table-column label="最近一次实践成绩" prop="TheoreticalAchievement" sortable></el-table-column>

            <el-table-column label="最近一次实践考核通过时间">
                <template slot-scope="scope">
                    <span v-if="scope.row.PracticeTime!=''&&scope.row.PracticeTime!=null">{{changeDate(scope.row.PracticeTime)}}</span>
                </template>
            </el-table-column>*@
                <el-table-column label="最高可考等级" prop="HighestTestSkill" sortable></el-table-column>

                <el-table-column label="下次可考等级" prop="ApplicationLevel" sortable></el-table-column>

                <el-table-column label="考级绩效要求" prop="Achievement" sortable></el-table-column>

                <el-table-column label="绩效是否符合">
                    <template slot-scope="scope">
                        @*<span>{{ChangeAch(scope.row.IsAchment)}}</span>*@
                        <i class="el-icon-check" v-if="scope.row.IsAchment=='true'" style="color:green"></i>
                        <i class="el-icon-close" v-if="scope.row.IsAchment=='false'"></i>
                    </template>
                </el-table-column>

                <el-table-column label="操作" width="180">
                    <template slot="header" slot-scope="scope">
                        <el-input v-model="search"
                                  size="mini"
                                  placeholder="输入关键字搜索" />
                    </template>
                    <template slot-scope="scope">
                        <el-button type="text" size="small"
                                   @@click="Reverse(scope.row.Id)">倒扣</el-button>
                        <el-button type="text" size="small"
                                   @@click="handleEdit(scope.row.Id, scope.row)">编辑</el-button>
                        <el-button type="text" size="small"
                                   @@click="handlePractical(scope.row.UserCode,scope.row.UserName)">实践</el-button>
                        <el-button type="text" size="small"
                                   @@click="handleSearchDetail(scope.row.UserCode,scope.row.UserName)">明细</el-button>
                        <el-button type="text" size="small"
                                   @@click="MeritsRecord(scope.row.UserCode)">绩效记录</el-button>
                    </template>
                </el-table-column>
            </el-table>
            <el-pagination @@size-change="handleSizeChange"
                           @@current-change="handleCurrentChange"
                           :current-page="paginations.page_index"
                           :page-sizes="paginations.page_sizes"
                           :page-size="paginations.page_size"
                           :layout="paginations.layout"
                           :total="paginations.total">
            </el-pagination>
            <!-- #region 上传实践弹窗 -->
            <el-dialog title="上传实践" :visible.sync="dialogFormPractical" :close-on-click-modal="false">
                <el-table :data="LPracticeInfo"
                          style="width: 100%;margin-top:20px ">
                    <el-table-column label="姓名"
                                     prop="UserName" sortable
                                     fixed>
                    </el-table-column>
                    <el-table-column label="工号"
                                     prop="UserCode" sortable>
                    </el-table-column>
                    <el-table-column label="有效期"
                                     sortable>
                        <template slot-scope="scope">
                            <span v-if="scope.row.ValidityDate!=''&&scope.row.ValidityDate!=null">{{changeDate(scope.row.ValidityDate)}}</span>
                        </template>
                    </el-table-column>
                    <el-table-column label="分数"
                                     prop="PracticeScore" sortable>
                    </el-table-column>
                    <el-table-column label="备注"
                                     prop="PracticeRemark" sortable>
                    </el-table-column>
                    <el-table-column label="附件"
                                     prop="Enclosure" sortable>
                    </el-table-column>
                    <el-table-column label="技能"
                                     prop="SkillName" sortable>
                    </el-table-column>
                    <el-table-column label="创建人"
                                     prop="CreateUser" sortable>
                    </el-table-column>
                    <el-table-column label="创建时间"
                                     sortable>
                        <template slot-scope="scope">
                            <span v-if="scope.row.CreateDate!=''&&scope.row.CreateDate!=null">{{changeDate(scope.row.CreateDate)}}</span>
                        </template>
                    </el-table-column>
                </el-table>

            </el-dialog>
            <!-- #endregion -->

            <el-dialog title="考试信息" :visible.sync="dialogFormVisible" :close-on-click-modal="false">
                <el-form :model="VExamUserInfo" ref="dialogForm" :label-position="labelPosition" :inline="true" class="demo-form-inline">
                    <el-form-item label="工号" prop="UserCode">
                        <el-input v-model="VExamUserInfo.UserCode" :disabled="true"></el-input>
                    </el-form-item>
                    <el-form-item label="姓名" prop="UserName">
                        <el-input v-model="VExamUserInfo.UserName" :disabled="true"></el-input>
                    </el-form-item>
                    <el-form-item label="部门代码" prop="DepartCode">
                        <el-input v-model="VExamUserInfo.DepartCode" :disabled="true"></el-input>
                    </el-form-item>
                    <el-form-item label="职位" prop="PostName">
                        <el-input v-model="VExamUserInfo.PostName" :disabled="true"></el-input>
                    </el-form-item>
                    <el-form-item label="职等" prop="RankName">
                        <el-input v-model="VExamUserInfo.RankName" :disabled="true"></el-input>
                    </el-form-item>
                    <el-form-item label="入职日" prop="EntryDate">
                        <el-input v-model="VExamUserInfo.EntryDate" :disabled="true"></el-input>
                    </el-form-item>
                    <el-form-item label="绩效" prop="Achievement">
                        <el-input v-model="VExamUserInfo.Achievement"></el-input>
                    </el-form-item>
                    <el-form-item label="考试类型" prop="TypeName">
                        <el-input v-model="VExamUserInfo.TypeName" :disabled="true"></el-input>
                    </el-form-item>
                    <el-form-item label="科目" prop="SubjectName">
                        <el-input v-model="VExamUserInfo.SubjectName" :disabled="true"></el-input>
                    </el-form-item>
                </el-form>
                <div slot="footer" class="dialog-footer">
                    <template>
                        <el-button @@click="dialogFormVisible = false">取 消</el-button>
                        <el-button type="primary" @@click="handleSave">确 定</el-button>
                    </template>

                </div>
            </el-dialog>

            <!-- #region 查看明细 -->
            <el-dialog title="明细查看" :visible.sync="dialogSearchVisible" :close-on-click-modal="false">
                <el-table :data="LExamUserDetailInfo" border
                          style="width: 100%;margin-top:20px ">
                    <el-table-column label="日期"
                                     prop="CreateDate" sortable
                                     fixed>
                    </el-table-column>
                    <el-table-column label="姓名"
                                     prop="UserName" sortable>
                    </el-table-column>
                    <el-table-column label="工号"
                                     prop="UserCode" sortable>
                    </el-table-column>
                    <el-table-column label="部门"
                                     prop="DepartCode" sortable>
                    </el-table-column>
                    <el-table-column label="职等"
                                     prop="RankName" sortable>
                    </el-table-column>
                    <el-table-column label="技能"
                                     prop="SkillName" sortable>
                    </el-table-column>
                    <el-table-column label="入职日"
                                     sortable>
                        <template slot-scope="scope">
                            <span v-if="scope.row.EntryDate!=''&&scope.row.EntryDate!=null">{{changeDate(scope.row.EntryDate)}}</span>
                        </template>
                    </el-table-column>
                    <el-table-column label="绩效"
                                     prop="Achievement" sortable>
                    </el-table-column>
                    <el-table-column label="考试时间"
                                     sortable>
                        <template slot-scope="scope">
                            <span v-if="scope.row.ExamDate!=''&&scope.row.ExamDate!=null">{{changeDate(scope.row.ExamDate)}}</span>
                        </template>
                    </el-table-column>
                    <el-table-column label="考试成绩"
                                     prop="ExamScore" sortable>
                    </el-table-column>
                    <el-table-column label="实践成绩"
                                     prop="PracticeScore" sortable>
                    </el-table-column>
                    <el-table-column label="预计考试时间"
                                     sortable>
                        <template slot-scope="scope">
                            <span v-if="scope.row.PlanExamDate!=''&&scope.row.PlanExamDate!=null">{{changeDate(scope.row.PlanExamDate)}}</span>
                        </template>
                    </el-table-column>
                    <el-table-column label="考试地点"
                                     prop="ExamPlace" sortable>
                    </el-table-column>
                    <el-table-column label="状态"
                                     prop="ExamStatus" sortable>
                    </el-table-column>
                    <el-table-column label="复审"
                                     prop="IsReview" sortable>
                    </el-table-column>
                    <el-table-column label="考试规则"
                                     prop="RuleName" sortable>
                    </el-table-column>
                    <el-table-column label="科目"
                                     prop="SubjectName" sortable>
                    </el-table-column>
                    <el-table-column label="考试类型"
                                     prop="TypeName" sortable>
                    </el-table-column>
                    <el-table-column label="本次申请等级"
                                     prop="ApplicationLevel" sortable>
                    </el-table-column>
                    <el-table-column label="最高可考技能"
                                     prop="ApplicationLevel" sortable>
                    </el-table-column>
                    <el-table-column label="是否符合技能"
                                     prop="IsAchment" sortable>
                    </el-table-column>

                </el-table>

            </el-dialog>

            <!-- #region 查看明细 -->
            <el-dialog title="明细查看" :visible.sync="dialogMeritsRecord" :close-on-click-modal="false">
                <el-table :data="LExamUserMeritsRecord" border
                          style="width: 100%;margin-top:20px ">
                    <el-table-column label="工号"
                                     prop="UserCode" sortable>
                    </el-table-column>
                    <el-table-column label="绩效"
                                     prop="Achievement" sortable>
                    </el-table-column>
                    <el-table-column label="时间"
                                     sortable>
                        <template slot-scope="scope">
                            <span v-if="scope.row.Achievement!=''&&scope.row.Achievement!=null">{{changeDate(scope.row.Achievement)}}</span>
                        </template>
                    </el-table-column>
                </el-table>

            </el-dialog>
        </div>



    </div>

</div>
<script src="~/Scripts/Vue/axios.js"></script>
<script src="~/Scripts/Vue/Vue.js"></script>
<script src="~/Scripts/elementUI/lib/index.js"></script>
<script src="~/Scripts/Vue/polyfill.min.js"></script>
@*<script src="~/Scripts/jquery-ui.min.js"></script>*@

<script type="text/javascript">
    new Vue({
        el: '#app',
        data: {
            topicratioProps: { multiple: true, label: 'Text', },
            tableData: [],
            activeName: 'third',
            TypeName:'',
            dialogFormVisible: false,
            dialogFormPractical: false,
            dialogSearchVisible: false,
            dialogMeritsRecord: false,
            VExamUserInfo: [],
            LPracticeInfo: [],
            LExamUserDetailInfo: [],
            LExamUserMeritsRecord:[],
            YListUserInfo: [],
            CPListUserInfo: [],
            VSearch:{},
            checkBoxData: [],
            checkBoxData11: [],
            LExamType:[],
            formLabelWidth: '120px',
            search: '',
            labelPosition: 'right',
            paginations: {
                page_index: 1,
                total: 0,
                page_size: 10,
                page_sizes: [10, 15, 20],
                layout: 'total, sizes, prev, pager, next, jumper'
            }
        },
        mounted: function () {
            this.getdata();
        },
        methods: {
            changeFun(val) {
                var _this = this;
                _this.checkBoxData = val;
            },
            getdata: function () {
                var _this = this;
                axios.post('/PEMain/GetUserInfo', {
                    data: _this.VSearch
                }).then(function (responese) {
                    _this.tableData = responese.data.tableData;
                    _this.YListUserInfo = responese.data.YListUserInfo;
                    _this.CPListUserInfo = responese.data.CPListUserInfo;
                    _this.LExamType = responese.data.LExamType;
                    _this.setPaginations();
                    console.log(responese.data.tableData);
                })
            },
            
            setPaginations() {
                var _this = this;
                _this.paginations.total = _this.tableData.length; //数据的数量

                _this.paginations.page_index = 1; //默认显示第一页
                _this.paginations.page_size = 10; //每页显示多少数据

                //显示数据
                _this.tableData = _this.tableData.filter((item, index) => {
                    return index < _this.paginations.page_size;
                })
            },
            handleSizeChange(page_size) {
                var _this = this;
                _this.paginations.page_index = 1; //第一页
                _this.paginations.page_size = page_size; //每页先显示多少数据
                _this.tableData = _this.tableData.filter((item, index) => {
                    return index < page_size
                })
            },
            handleCurrentChange(page) {
                var _this = this;
                axios.post('/PEMain/GetUserInfo', {
                    data: _this.VSearch
                }).then(res => {
                    _this.tableData = res.data.tableData;
                    let index = _this.paginations.page_size * (page - 1);
                    //获取总数
                    let allData = _this.paginations.page_size * page;
                    let tablist = [];
                    for (let i = index; i < allData; i++) {
                        if (_this.tableData[i]) {
                            tablist.push(_this.tableData[i]);
                        }
                    }
                    _this.tableData = tablist;
                })

            },

            topicratioPropsFn: function (val) {
                var _this = this;
                _this.RuleGrList = [];
                val.forEach(function (lst, num) {
                    _this.ListTopicInfo.forEach(function (item, index) {
                        if (item.ID == lst)
                            _this.RuleGrList.push(item);
                    })
                })

            },
            SearchinByTypeName() {
                var _this = this;
                axios.post('/PEMain/GetUserInfo', {
                    data: _this.VSearch
                }).then(function (res) {
                    _this.tableData = res.data.tableData;
                    _this.YListUserInfo = res.data.YListUserInfo;
                    _this.CPListUserInfo = res.data.CPListUserInfo;
                    _this.setPaginations();
                });
            },
            handleSave: function () {
                var _this = this;
                var objs = {};
                objs.VExamUserInfo = _this.VExamUserInfo;
                axios.post('/PEMain/SaveVExamUserInfo', {
                    model: objs
                }).then(function (res) {
                    _this.tableData = res.data.tableData;
                    _this.setPaginations();
                });
                _this.dialogFormVisible = false;

            },
            //上传实践操作
            handlePractical(usercode, username) {
                console.log(usercode, username, 312);
                var _this = this;
                _this.VExamUserInfo.UserCode = usercode;
                _this.VExamUserInfo.UserName = username;
                axios.post('/PEMain/SearchPracticeInfo', {
                    model: usercode
                }).then(function (res) {
                    _this.LPracticeInfo = res.data.LPracticeInfo;
                });
                _this.dialogFormPractical = true;
            },
            //查询明细
            handleSearchDetail(usercode) {
                var _this = this;
                axios.post('/PEMain/SerachDetailInfo', {
                    model: usercode
                }).then(function (res) {
                    _this.LExamUserDetailInfo = res.data.LExamUserDetailInfo;

                });
                _this.dialogSearchVisible = true;
            },
            //绩效记录查询
            MeritsRecord(usercode) {
                var _this = this;
                axios.post('/PEMain/SerachMeritsRecord', {
                    model: usercode
                }).then(function (res) {
                    _this.LExamUserMeritsRecord = res.data.LExamUserMeritsRecord;
                });
                _this.dialogMeritsRecord = true;
            },
            


            StopComplete(ID) {
                var _this = this;
                axios.post('/PEMain/StopComplete', {
                    model: ID
                }).then(function (res) {
                    _this.CPListUserInfo = res.data.CPListUserInfo;
                });
            },
            handlesert() {
                var _this = this;
                _this.checkBoxData11 = [];
                _this.checkBoxData.forEach(function (item, index) {
                    item.EntryDate = _this.changeDate(item.EntryDate)                    
                    _this.checkBoxData11.push(item);
                })
                axios.post('/PEMain/InsertUserDetailInfo', {
                    model: _this.checkBoxData11
                }).then(function (res) {
                    if (res.data.Results =='已报名成功!') {
                        _this.$message({
                            message: res.data.Results,
                            type: 'success'
                        });   
                        _this.tableData = res.data.tableData;
                        _this.YListUserInfo = res.data.YListUserInfo;
                        _this.CPListUserInfo = res.data.CPListUserInfo;
                    }
                    else {
                        _this.$message.error(res.data.Results);
                    }                 
                });
            },
            handleEdit(index, row) {
                var _this = this;
                axios.post('/PEMain/GetExamUser', {
                    ID: index
                }).then(function (res) {
                    _this.VExamUserInfo = res.data.VExamUserInfo;
                    _this.VExamUserInfo.EntryDate = _this.changeDate(_this.VExamUserInfo.EntryDate)
                });
                _this.dialogFormVisible = true;
            },
            Reverse(index) {
                var _this = this;
                axios.post('/PEMain/ReverseExamUser', {
                    model: index
                }).then(function (res) {
                    _this.tableData = res.data.tableData;
                });
            },
            handleDelete(index) {
                var _this = this;
                axios.post('/PEMain/DeleteExamUserInfo', {
                    model: index
                }).then(function (res) {
                    _this.tableData = res.data.tableData;
                    _this.setPaginations();
                });
            },
            changeDate: function (dates) {
                var date = new Date(parseInt(dates.replace("/Date(", "").replace(")/", ""), 10));
                Y = date.getFullYear() + '-';
                M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
                D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';
                h = (date.getHours() < 10 ? '0' + (date.getHours()) : date.getHours()) + ':';
                m = (date.getMinutes() < 10 ? '0' + (date.getMinutes()) : date.getMinutes()) + ':';
                s = (date.getSeconds() < 10 ? '0' + (date.getSeconds()) : date.getSeconds());
                var NewDtime = Y + M + D + h + m + s;
                var listDate = new Date(date);
                var year = listDate.getFullYear();
                var mon = listDate.getMonth() + 1;
                var day = listDate.getDate();
                return year + '-' + mon + '-' + day;
            },
            changeMonth: function (dates) {
                var date = new Date(parseInt(dates.replace("/Date(", "").replace(")/", ""), 10));
                Y = date.getFullYear() + '-';
                M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
                D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';
                h = (date.getHours() < 10 ? '0' + (date.getHours()) : date.getHours()) + ':';
                m = (date.getMinutes() < 10 ? '0' + (date.getMinutes()) : date.getMinutes()) + ':';
                s = (date.getSeconds() < 10 ? '0' + (date.getSeconds()) : date.getSeconds());
                var NewDtime = Y + M + D + h + m + s;
                var listDate = new Date(date);
                var year = listDate.getFullYear();
                var mon = listDate.getMonth() + 1;
                var day = listDate.getDate();
                return year + '-' + mon;
            },
            ChangeAch: function (ach) {
                if (ach == "false") {
                    return "否";
                }
                if (ach == "true") {
                    return "是";
                }
            },
            handleExcelSuccess(Result, tableData) {
                var _this = this;
                _this.tableData = Result.tableData;
                this.$message({
                    message: Result.Result,
                    type: 'success'
                });
            },           
            handleExamSuccess(Result, CPListUserInfo) {
                var _this = this;
                _this.CPListUserInfo = Result.CPListUserInfo;
                this.$message({
                    message: Result.Result,
                    type: 'success'
                });
            },
           
        },

    })

</script>

