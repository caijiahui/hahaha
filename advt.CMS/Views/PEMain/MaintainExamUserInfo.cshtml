@model advt.CMS.Models.ExamModel.ExamUserInfoModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Scripts/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Scripts/elementUI/lib/theme-chalk/index.css" rel="stylesheet" />
<style>
    .topie {
        width: 50px;
    }
</style>
<div id="app" style="margin-left:20px">
    <div>

        <template>
            <a href="/Attachment/temp/Template/UserAchievement.xlsx">
                <el-button size="small" type="primary" style="margin-top:30px">人员绩效模板下载</el-button>
            </a>
            <el-upload class="upload-demo" style="margin-top:30px;"
                       ref="upload"
                       :multiple="false"
                       :on-success="handleExcelSuccess"
                       action="/PEMain/Upload_UserAch">
                <el-button size="small" type="primary">EXCEL上传绩效</el-button>
            </el-upload>
        </template>

        <el-table height="800" :data="tableData.filter(data => !search || data.UserCode.toLowerCase().includes(search.toLowerCase()))"
                  style="width: 100% " :default-sort="{prop: 'UserCode', order: 'CreateUser'}">
            <el-table-column fixed
                             prop="UserCode"
                             label="工号"
                             width="120">
            </el-table-column>
            <el-table-column label="姓名" prop="UserName" sortable width="120"></el-table-column>
            <el-table-column label="部门代码" prop="DepartCode" sortable width="120"></el-table-column>
            <el-table-column label="职位" prop="PostName" sortable width="120"></el-table-column>
            <el-table-column label="职等" prop="RankName" sortable width="120"></el-table-column>
            <el-table-column label="入职日"
                             width="120">
                <template slot-scope="scope">
                    <span>{{changeDate(scope.row.EntryDate)}}</span>
                </template>
            </el-table-column>
            <el-table-column label="绩效" prop="Achievement" sortable width="120"></el-table-column>
            <el-table-column label="考试类型" prop="TypeName" sortable width="120"></el-table-column>
            <el-table-column label="科目" prop="SubjectName" sortable width="120"></el-table-column>
            <el-table-column label="本职等技能" prop="SkillLevel" sortable width="120"></el-table-column>
            <el-table-column label="目前技能等级" prop="CurrentSkillLevel" sortable width="130"></el-table-column>
            <el-table-column label="理论成绩" prop="TheoreticalAchievement" sortable width="120"></el-table-column>
            <el-table-column label="最高可考技能" prop="HighestTestSkill" sortable width="140"></el-table-column>
            <el-table-column label="本次申请等级" prop="ApplicationLevel" sortable width="140"></el-table-column>
            <el-table-column label="是否符合绩效"
                             width="130">
                <template slot-scope="scope">
                    @*<span>{{ChangeAch(scope.row.IsAchment)}}</span>*@
                    <i class="el-icon-check" v-if="scope.row.IsAchment=='true'" style="color:green"></i>
                    <i class="el-icon-close" v-if="scope.row.IsAchment=='false'"></i>
                </template>
            </el-table-column>
            <el-table-column label="本次是否考试"
                             width="130">
                <template slot-scope="scope">
                    @*<span>{{ChangeAch(scope.row.IsExam)}}</span>*@
                    <i class="el-icon-check" v-if="scope.row.IsExam=='true'" style="color:green"></i>
                    <i class="el-icon-close" v-if="scope.row.IsExam=='false'"></i>
                </template>
            </el-table-column>


            <el-table-column fixed="right" label="操作" width="340">

                <template slot-scope="scope">
                    <el-button size="mini"
                               @@click="handleEdit(scope.row.Id, scope.row)">Edit</el-button>
                    <el-button size="mini"
                               type="danger"
                               @@click="handleDelete(scope.row.Id)">Delete</el-button>
                    <el-button size="mini"
                               @@click="handlePractical(scope.row.UserCode,scope.row.UserName)">实践明细</el-button>
                    <el-button size="mini"
                               @@click="handleSearchDetail(scope.row.UserCode,scope.row.UserName)">明细</el-button>
                </template>
            </el-table-column>
        </el-table>

        <!-- #region 上传实践弹窗 -->
        <el-dialog title="上传实践" :visible.sync="dialogFormPractical">
            <el-table :data="LPracticeInfo"
                      style="width: 100%;margin-top:20px ">
                <el-table-column label="姓名"
                                 prop="UserName" sortable
                                 fixed>
                </el-table-column>
                <el-table-column label="工号"
                                 prop="UserCode" sortable>
                </el-table-column>
                <el-table-column label="有效期"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.ValidityDate!=''&&scope.row.ValidityDate!=null">{{changeDate(scope.row.ValidityDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="分数"
                                 prop="PracticeScore" sortable>
                </el-table-column>
                <el-table-column label="备注"
                                 prop="PracticeRemark" sortable>
                </el-table-column>
                <el-table-column label="附件"
                                 prop="Enclosure" sortable>
                </el-table-column>
                <el-table-column label="技能"
                                 prop="SkillName" sortable>
                </el-table-column>
                <el-table-column label="创建人"
                                 prop="CreateUser" sortable>
                </el-table-column>
                <el-table-column label="创建时间"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.CreateDate!=''&&scope.row.CreateDate!=null">{{changeDate(scope.row.CreateDate)}}</span>
                    </template>
                </el-table-column>
            </el-table>

        </el-dialog>
        <!-- #endregion -->
        <el-pagination @@size-change="handleSizeChange"
                           @@current-change="handleCurrentChange"
                           :current-page="paginations.page_index"
                           :page-sizes="paginations.page_sizes"
                           :page-size="paginations.page_size"
                           :layout="paginations.layout"
                           :total="paginations.total">
            </el-pagination>
        <el-dialog title="考试信息" :visible.sync="dialogFormVisible">
            <el-form :model="VExamUserInfo" ref="dialogForm" :label-position="labelPosition" :inline="true" class="demo-form-inline">
                <el-form-item label="工号" prop="UserCode">
                    <el-input v-model="VExamUserInfo.UserCode" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="姓名" prop="UserName">
                    <el-input v-model="VExamUserInfo.UserName" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="部门代码" prop="DepartCode">
                    <el-input v-model="VExamUserInfo.DepartCode"></el-input>
                </el-form-item>
                <el-form-item label="职位" prop="PostName">
                    <el-input v-model="VExamUserInfo.PostName"></el-input>
                </el-form-item>
                <el-form-item label="职等" prop="RankName">
                    <el-input v-model="VExamUserInfo.RankName"></el-input>
                </el-form-item>
                <el-form-item label="入职日" prop="EntryDate">
                    <el-input v-model="VExamUserInfo.EntryDate"></el-input>
                </el-form-item>
                <el-form-item label="绩效" prop="Achievement">
                    <el-input v-model="VExamUserInfo.Achievement"></el-input>
                </el-form-item>
                <el-form-item label="考试类型" prop="TypeName">
                    <el-input v-model="VExamUserInfo.TypeName" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="科目" prop="SubjectName">
                    <el-input v-model="VExamUserInfo.SubjectName" :disabled="true"></el-input>
                </el-form-item>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <template>
                    <el-button @@click="dialogFormVisible = false">取 消</el-button>
                    <el-button type="primary" @@click="handleSave">确 定</el-button>
                </template>

            </div>
        </el-dialog>

        <!-- #region 查看明细 -->
        <el-dialog title="明细查看" :visible.sync="dialogSearchVisible">
            <el-table :data="LExamUserDetailInfo"
                      style="width: 100%;margin-top:20px ">
                <el-table-column label="日期"
                                 prop="CreateDate" sortable
                                 fixed>
                </el-table-column>
                <el-table-column label="姓名"
                                 prop="UserName" sortable>
                </el-table-column>
                <el-table-column label="工号"
                                 prop="UserCode" sortable>
                </el-table-column>
                <el-table-column label="部门"
                                 prop="DepartCode" sortable>
                </el-table-column>
                <el-table-column label="职等"
                                 prop="RankName" sortable>
                </el-table-column>
                <el-table-column label="技能"
                                 prop="SkillName" sortable>
                </el-table-column>
                <el-table-column label="入职日"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.EntryDate!=''&&scope.row.EntryDate!=null">{{changeDate(scope.row.EntryDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="绩效"
                                 prop="Achievement" sortable>
                </el-table-column>
                <el-table-column label="考试时间"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.ExamDate!=''&&scope.row.ExamDate!=null">{{changeDate(scope.row.ExamDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="考试成绩"
                                 prop="ExamScore" sortable>
                </el-table-column>
                <el-table-column label="实践成绩"
                                 prop="PracticeScore" sortable>
                </el-table-column>
                <el-table-column label="预计考试时间"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.PlanExamDate!=''&&scope.row.PlanExamDate!=null">{{changeDate(scope.row.PlanExamDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="考试地点"
                                 prop="ExamPlace" sortable>
                </el-table-column>
                <el-table-column label="状态"
                                 prop="ExamStatus" sortable>
                </el-table-column>
                <el-table-column label="复审"
                                 prop="IsReview" sortable>
                </el-table-column>
                <el-table-column label="考试规则"
                                 prop="RuleName" sortable>
                </el-table-column>
                <el-table-column label="科目"
                                 prop="SubjectName" sortable>
                </el-table-column>
                <el-table-column label="考试类型"
                                 prop="TypeName" sortable>
                </el-table-column>
                <el-table-column label="本次申请等级"
                                 prop="ApplicationLevel" sortable>
                </el-table-column>
                <el-table-column label="最高可考技能"
                                 prop="ApplicationLevel" sortable>
                </el-table-column>
                <el-table-column label="是否符合技能"
                                 prop="IsAchment" sortable>
                </el-table-column>

            </el-table>

        </el-dialog>


    </div>
   
</div>
<script src="~/Scripts/Vue/axios.js"></script>
<script src="~/Scripts/Vue/Vue.js"></script>
<script src="~/Scripts/elementUI/lib/index.js"></script>
<script src="~/Scripts/Vue/polyfill.min.js"></script>
@*<script src="~/Scripts/jquery-ui.min.js"></script>*@

<script type="text/javascript">
    new Vue({
        el: '#app',
        data: {
            topicratioProps: { multiple: true, label: 'Text', },
            tableData: [],
            dialogFormVisible: false,
            dialogFormPractical: false,
            dialogSearchVisible: false,
            VExamUserInfo: [],
            LPracticeInfo: [],
            LExamUserDetailInfo:[],
            formLabelWidth: '120px',
            search: '',
            labelPosition: 'right',
            paginations: {
                page_index: 1,
                total: 0,
                page_size: 10,
                page_sizes: [10, 15, 20],
                layout: 'total, sizes, prev, pager, next, jumper'
            }
        },
        mounted: function () {
            this.getdata();
        },
        methods: {
            getdata: function () {
                var _this = this;
                axios.post('/PEMain/GetUserInfo').then(function (responese) {
                    _this.tableData = responese.data.tableData;
                    console.log(297,297);
                    _this.setPaginations();
                })
            },
            setPaginations() {
                var _this = this;
                _this.paginations.total = _this.tableData.length; //数据的数量

                _this.paginations.page_index = 1; //默认显示第一页
                _this.paginations.page_size = 10; //每页显示多少数据

                //显示数据
                _this.tableData = _this.tableData.filter((item, index) => {
                    return index < _this.paginations.page_size;
                })
            },
            handleSizeChange(page_size) {
                var _this = this;
                _this.paginations.page_index = 1; //第一页
                _this.paginations.page_size = page_size; //每页先显示多少数据
                _this.tableData = _this.tableData.filter((item, index) => {
                    return index < page_size
                })
            },
            handleCurrentChange(page) {
                var _this = this;
                axios.post('/PEMain/GetUserInfo').then(res => {
                    _this.tableData = res.data.tableData;
                    let index = _this.paginations.page_size * (page - 1);
                    //获取总数
                    let allData = _this.paginations.page_size * page;
                    let tablist = [];
                    for (let i = index; i < allData; i++) {
                        if (_this.tableData[i]) {
                            tablist.push(_this.tableData[i]);
                        }
                    }
                    _this.tableData = tablist;
                })

            },
           
            topicratioPropsFn: function (val) {
                var _this = this;
                _this.RuleGrList = [];
                val.forEach(function (lst, num) {
                    _this.ListTopicInfo.forEach(function (item, index) {
                        if (item.ID == lst)
                            _this.RuleGrList.push(item);
                    })
                })

            },
            handleSave: function () {
                var _this = this;
                var objs = {};
                objs.VExamUserInfo = _this.VExamUserInfo;
                axios.post('/PEMain/SaveVExamUserInfo', {
                    model: objs
                }).then(function (res) {
                    _this.tableData = res.data.tableData;
                    _this.setPaginations();
                });
                _this.dialogFormVisible = false;

            },
            //上传实践操作
            handlePractical(usercode, username) {
                console.log(usercode, username,312);
                var _this = this;
                _this.VExamUserInfo.UserCode = usercode;
                _this.VExamUserInfo.UserName = username;
                axios.post('/PEMain/SearchPracticeInfo', {
                    model: usercode
                }).then(function (res) {
                    _this.LPracticeInfo = res.data.LPracticeInfo;
                });
                _this.dialogFormPractical = true;
            },
            //查询明细
            handleSearchDetail(usercode) {
                var _this = this;
                axios.post('/PEMain/SerachDetailInfo', {
                    model: usercode
                }).then(function (res) {
                    _this.LExamUserDetailInfo = res.data.LExamUserDetailInfo;
                   
                });
                _this.dialogSearchVisible = true;
            },
            handleEdit(index, row) {
                var _this = this;
                console.log(index);
                axios.post('/PEMain/GetExamUser', {
                    ID: index
                }).then(function (res) {
                    _this.VExamUserInfo = res.data.VExamUserInfo;
                    _this.VExamUserInfo.EntryDate = _this.changeDate(_this.VExamUserInfo.EntryDate)
                });
                _this.dialogFormVisible = true;
            },
            handleDelete(index) {
                var _this = this;
                axios.post('/PEMain/DeleteExamUserInfo', {
                    model: index
                }).then(function (res) {
                    _this.tableData = res.data.tableData;
                  _this.setPaginations();
                });
            },            
            changeDate: function (dates) {
                var date = new Date(parseInt(dates.replace("/Date(", "").replace(")/", ""), 10));
                Y = date.getFullYear() + '-';
                M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
                D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';
                h = (date.getHours() < 10 ? '0' + (date.getHours()) : date.getHours()) + ':';
                m = (date.getMinutes() < 10 ? '0' + (date.getMinutes()) : date.getMinutes()) + ':';
                s = (date.getSeconds() < 10 ? '0' + (date.getSeconds()) : date.getSeconds());
                var NewDtime = Y + M + D + h + m + s;
                var listDate = new Date(date);
                var year = listDate.getFullYear();
                var mon = listDate.getMonth() + 1;
                var day = listDate.getDate();
                return year + '-' + mon + '-' + day;
            },
            ChangeAch: function (ach) {
                if (ach == "false") {
                    return "否";
                }
                if (ach == "true") {
                    return "是";
                }
            },
            handleExcelSuccess(Result) {
                if (Result == 'success') {
                    var _this = this;
                    _this.tableData = responese.data.tableData;
                    this.$message({
                        message: '恭喜你,上传成功',
                        type: 'success'
                    });
                }
                else {
                    this.$message.error('上传失败');
                }
            },
        },

    })

</script>

