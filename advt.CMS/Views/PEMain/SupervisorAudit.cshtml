@model advt.CMS.Models.ExamModel.SupervisorAuditModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #app {
        padding: 20px 30px
    }
</style>
<div id="app"  style="margin-left:20px">
    <div>
        <el-table :data="ListExamUserDetailInfos"
                  style="width: 100%;margin-top:20px " border>
            <el-table-column label="部门"
                             prop="DepartCode" sortable
                             width="180" fixed>
            </el-table-column>
            <el-table-column label="工号"
                             prop="UserCode" sortable
                             width="180">
            </el-table-column>
            <el-table-column label="本次申请等级"
                             prop="ApplyLevel" sortable
                             width="180">
            </el-table-column>
            <el-table-column label="绩效"
                             prop="Achievement" sortable
                             width="180">
            </el-table-column>
            <el-table-column label="是否复审"
                             prop="IsAchievement" sortable
                             width="180">
            </el-table-column>
            <el-table-column label="实践成绩"
                             prop="PracticeScore" sortable
                             width="180">
            </el-table-column>
            <el-table-column label="考试规则"
                             prop="RuleName" sortable
                             width="180">
            </el-table-column>
            <el-table-column fixed="right"
                             label="操作"
                             width="120">
                <template slot-scope="scope">
                    <el-button size="mini"
                               @@click="handleEdit()">Edit</el-button>
                </template>
            </el-table-column>
            @*<el-table-column align="right" fixed="right">

                <template slot-scope="scope">
                    <el-button size="mini"
                               @@click="handleEdit()">Edit</el-button>
                </template>

            </el-table-column>*@
        </el-table>
        @*<el-dialog title="考试类型编辑" :visible.sync="dialogFormVisible">
            <el-form :model="VexamType">
                <el-form-item label="考试类型" :label-width="formLabelWidth">
                    <el-input v-model="VexamType.TypeName" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="修改人" :label-width="formLabelWidth">
                    <el-input v-model="VexamType.CreateUser" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="修改时间" :label-width="formLabelWidth">
                    <el-input v-model="VexamType.CreateDate" autocomplete="off"></el-input>
                </el-form-item>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <template>
                    <el-button @@click="dialogFormVisible = false">取 消</el-button>
                    <el-button type="primary" @@click="handleSave('save')">确 定</el-button>
                </template>

            </div>
        </el-dialog>*@
    </div>
</div>
<script src="~/Scripts/Vue/Vue.js"></script>
<script src="~/Scripts/Vue/axios.js"></script>
<script src="~/Scripts/elementUI/lib/index.js"></script>
<script src="~/Scripts/Vue/polyfill.min.js"></script>
<script type="text/javascript">
    new Vue({
        el: '#app',
        data: {
            dialogFormVisible: false,
            form: [],
            ListExamUserDetailInfos:[],
            formLabelWidth: '120px',
            search: ''
        },
        mounted: function () {
            this.getdata();
        },

        methods: {
          
            handleEdit(ID, TypeName) {
               
                var _this = this;
                _this.dialogFormVisible = true;
                _this.VexamType.TypeName = TypeName;
                _this.VexamType.ID = ID
            }, 
            handleSave(flag) {
                var _this = this;
                var objs = {};
                if (flag == 'save') {
                    objs.VexamType = _this.VexamType;
                }
                else if (flag == 'Edit') {
                    objs.ExamName = _this.ExamName;
                }
                axios.post('/PEMain/SaveTypeInfo', {
                    model: objs
                }).then(function (res) {
                    _this.LexamType = res.data.LexamType;
                    this.VexamType = {};
                    _this.ExamName = '';
                });
                _this.dialogFormVisible = false
            },
            handleDelete(index, row) {
                var _this = this;
                var ID = index;
                axios.post('/PEMain/DeleteTypeInfo', {
                    ID: ID
                }).then(function (res) {
                    _this.LexamType = res.data.LexamType;
                    this.VexamType = {};
                    _this.ExamName = '';
                });
                _this.dialogFormVisible = false
            },
            changeDate: function (dates) {
                var date = new Date(parseInt(dates.replace("/Date(", "").replace(")/", ""), 10));
                Y = date.getFullYear() + '-';
                M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
                D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';
                h = (date.getHours() < 10 ? '0' + (date.getHours()) : date.getHours()) + ':';
                m = (date.getMinutes() < 10 ? '0' + (date.getMinutes()) : date.getMinutes()) + ':';
                s = (date.getSeconds() < 10 ? '0' + (date.getSeconds()) : date.getSeconds());
                var NewDtime = Y + M + D + h + m + s;
                var listDate = new Date(date);
                var year = listDate.getFullYear();
                var mon = listDate.getMonth() + 1;
                var day = listDate.getDate();
                //console.log(new Date(date).getFullYear())
                return year + '-' + mon + '-' + day;
            },
            getdata: function () {
                var _this = this;
                axios.post('/PEMain/GetSupervisorAuditUser').then(function (responese) {
                    _this.ListExamUserDetailInfos = responese.data.ListExamUserDetailInfos;
                })
            }
        }

    })


</script>

