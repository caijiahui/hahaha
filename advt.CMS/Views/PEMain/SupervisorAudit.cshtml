@model advt.CMS.Models.ExamModel.SupervisorAuditModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #app {
        padding: 20px 30px
    }
</style>
<div id="app" style="margin-left:20px">
    <template>
        <el-breadcrumb separator="/" style="margin-top:20px;margin-bottom:20px">
            <el-breadcrumb-item>考试管理</el-breadcrumb-item>
            <el-breadcrumb-item>主管审核</el-breadcrumb-item>
        </el-breadcrumb>

    </template>
    <div>
        <el-button @@click="handleUpdate()">批量更新</el-button>

        <el-divider content-position="left">部门人员</el-divider>

        <el-table :data="ListExamUserDetailInfos"
                  style="width: 100%;margin-top:20px " border @@selection-change="changeFun">
            <el-table-column type="selection">
            </el-table-column>
            <el-table-column label="本次是否可考"
                             prop="IsExam">
                <template slot-scope="scope">
                    <el-tag type="success" v-if="scope.row.IsExam=='true'">可考</el-tag>
                </template>

            </el-table-column>
            <el-table-column label="姓名"
                             prop="UserName" sortable
                             fixed>
            </el-table-column>
            <el-table-column label="部门"
                             prop="DepartCode" sortable>
            </el-table-column>
            <el-table-column label="工号"
                             prop="UserCode" sortable>
            </el-table-column>

            <el-table-column label="最高可考技能"
                             prop="HighestTestSkill" sortable>
            </el-table-column>
            <el-table-column label="本次申请等级"
                             prop="ApplicationLevel" sortable>
            </el-table-column>
            <el-table-column label="考试时间"
                             sortable>
                <template slot-scope="scope">
                    <span v-if="scope.row.ExamDate!=''&&scope.row.ExamDate!=null">{{changeDate(scope.row.ExamDate)}}</span>
                </template>
            </el-table-column>
            <el-table-column label="考试规则"
                             prop="ExamRule" sortable
                             width="180">
            </el-table-column>
            <el-table-column fixed="right"
                             label="操作"
                             width="240">
                <template slot-scope="scope">

                    <el-button size="mini"
                               @@click="handlePractical(scope.row.UserCode,scope.row.UserName)">上传实践</el-button>
                    <el-button size="mini"
                               @@click="handleSearchDetail(scope.row.UserCode,scope.row.UserName)">明细</el-button>
                </template>
            </el-table-column>
            @*<el-table-column align="right" fixed="right">

                    <template slot-scope="scope">
                        <el-button size="mini"
                                   @@click="handleEdit()">Edit</el-button>
                    </template>

                </el-table-column>*@
        </el-table>

        <el-divider content-position="left">已报名人员</el-divider>
        <el-table :data="LSignedupUser"
                  style="width: 100%;margin-top:20px " border @@selection-change="changeFun">
            <el-table-column label="状态"
                             prop="ExamStatus">
                <template slot-scope="scope">
                    <el-tag type="success" v-if="scope.row.ExamStatus=='Signup'">已报名</el-tag>
                </template>

            </el-table-column>
            <el-table-column label="姓名"
                             prop="UserName" sortable
                             fixed>
            </el-table-column>
            <el-table-column label="部门"
                             prop="DepartCode" sortable>
            </el-table-column>
            <el-table-column label="工号"
                             prop="UserCode" sortable>
            </el-table-column>

            <el-table-column label="最高可考技能"
                             prop="HighestTestSkill" sortable>
            </el-table-column>
            <el-table-column label="本次申请等级"
                             prop="ApplicationLevel" sortable>
            </el-table-column>
            <el-table-column label="本次是否可考"
                             prop="IsExam" sortable>
            </el-table-column>
            <el-table-column label="考试时间"
                             sortable>
                <template slot-scope="scope">
                    <span v-if="scope.row.ExamDate!=''&&scope.row.ExamDate!=null">{{changeDate(scope.row.ExamDate)}}</span>
                </template>
            </el-table-column>
            <el-table-column label="考试规则"
                             prop="RuleName" sortable>
            </el-table-column>
            <el-table-column fixed="right"
                             label="操作"
                             width="100">
                <template slot-scope="scope">

                    <el-button size="mini"
                               @@click="handleStop(scope.row.ID)">取消</el-button>

                </template>
            </el-table-column>
        </el-table>
        <!-- #region 上传实践弹窗 -->
        <el-dialog title="上传实践" :visible.sync="dialogFormPractical">
            <el-form :model="VPracticeInfo" class="demo-form-inline" :inline="true">
                <el-form-item label="工号" :label-width="formLabelWidth">
                    <el-input v-model="VPracticeInfo.UserCode" autocomplete="off" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="姓名" :label-width="formLabelWidth">
                    <el-input v-model="VPracticeInfo.UserName" autocomplete="off" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="有效期" :label-width="formLabelWidth">
                    <el-date-picker v-model="VPracticeInfo.ValidityDate" type="date" placeholder="选择日" @@change="dataSearch" value-format="yyyy-MM-dd"></el-date-picker>
                </el-form-item>
                <el-form-item label="成绩" :label-width="formLabelWidth">
                    <el-input v-model="VPracticeInfo.PracticeScore" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="技能" :label-width="formLabelWidth">
                    <el-input v-model="VPracticeInfo.SkillName" autocomplete="off"></el-input>
                </el-form-item>

                <el-form-item label="上传附件" :label-width="formLabelWidth">
                    <el-input v-model="VPracticeInfo.Enclosure" autocomplete="off" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item>
                    <el-upload class="upload-demo"
                               ref="upload"
                               :multiple="false"
                               :on-success="handleAannexSuccess"
                               action="/PEMain/Upload_Supervisor">
                        <el-button size="small" type="primary">上传</el-button>
                    </el-upload>
                </el-form-item>
                <el-form-item label="备注" :label-width="formLabelWidth">
                    <el-input type="textarea" :cols="40" v-model="VPracticeInfo.PracticeRemark" autocomplete="off" :label-width="100"></el-input>
                </el-form-item>
            </el-form>
            <el-table :data="LPracticeInfo"
                      style="width: 100%;margin-top:20px " border @@selection-change="changeFun">
                <el-table-column label="姓名"
                                 prop="UserName" sortable
                                 fixed>
                </el-table-column>
                <el-table-column label="工号"
                                 prop="UserCode" sortable>
                </el-table-column>
                <el-table-column label="有效期"
                                 prop="ValidityDate" sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.ValidityDate!=''&&scope.row.ValidityDate!=null">{{changeDate(scope.row.ValidityDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="分数"
                                 prop="PracticeScore" sortable>

                </el-table-column>
                <el-table-column label="备注"
                                 prop="PracticeRemark" sortable>
                </el-table-column>
                <el-table-column label="附件"
                                 prop="Enclosure" sortable>
                    <template slot-scope="scope">
                        @*v-if="scope.row.Enclosure!=''*@
                        <span v-if="scope.row.Enclosure!=''&&scope.row.Enclosure!=null"> <a :href="'/Attachment/Practice/'+scope.row.Enclosure"> <i class="el-icon-download"></i></a></span>
                    </template>
                </el-table-column>
                <el-table-column label="技能"
                                 prop="SkillName" sortable>
                </el-table-column>
                <el-table-column label="创建人"
                                 prop="CreateUser" sortable>
                </el-table-column>
                <el-table-column label="创建时间"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.CreateDate!=''&&scope.row.CreateDate!=null">{{changeDate(scope.row.CreateDate)}}</span>
                    </template>
                </el-table-column>
            </el-table>
            <div slot="footer" class="dialog-footer">
                <template>
                    <el-button @@click="dialogFormPractical = false">取 消</el-button>
                    <el-button type="primary" @@click="handlePracticalSave('save')">保存</el-button>
                </template>

            </div>
        </el-dialog>
        <!-- #endregion -->
        <!-- #region 批量更新 -->
        <el-dialog title="信息编辑" :visible.sync="dialogUpdateVisible">
            <el-form :model="VAuditCheck">
                <el-form-item label="人员" :label-width="formLabelWidth">
                    <el-input v-model="VAuditCheck.Users" autocomplete="off" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="考试规则" :label-width="formLabelWidth">
                    <el-select v-model="VAuditCheck.RuleName" placeholder="考试规则">
                        <el-option v-for="item in LRules" :key="item.RuleName" :label="item.RuleName" :value="item.RuleName"></el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="是否报名" :label-width="formLabelWidth">
                    <el-checkbox v-model="VAuditCheck.IsExam"></el-checkbox>
                </el-form-item>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <template>
                    <el-button @@click="dialogUpdateVisible = false">取 消</el-button>
                    <el-button type="primary" @@click="handleSave()">确 定</el-button>
                </template>

            </div>

        </el-dialog>
        <!-- #endregion -->
        <!-- #region 查看明细 -->
        <el-dialog title="明细查看" :visible.sync="dialogSearchVisible">
            <el-table :data="LExamUserDetailInfo"
                      style="width: 100%;margin-top:20px " border @@selection-change="changeFun">
                <el-table-column label="日期"
                                 prop="CreateDate" sortable
                                 fixed>
                </el-table-column>
                <el-table-column label="姓名"
                                 prop="UserName" sortable>
                </el-table-column>
                <el-table-column label="工号"
                                 prop="UserCode" sortable>
                </el-table-column>
                <el-table-column label="部门"
                                 prop="DepartCode" sortable>
                </el-table-column>
                <el-table-column label="职等"
                                 prop="RankName" sortable>
                </el-table-column>
                <el-table-column label="技能"
                                 prop="SkillName" sortable>
                </el-table-column>
                <el-table-column label="入职日"
                                 prop="EntryDate" sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.EntryDate!=''&&scope.row.EntryDate!=null">{{changeDate(scope.row.EntryDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="绩效"
                                 prop="Achievement" sortable>
                </el-table-column>
                <el-table-column label="考试时间"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.ExamDate!=''&&scope.row.ExamDate!=null">{{changeDate(scope.row.ExamDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="考试成绩"
                                 prop="ExamScore" sortable>
                </el-table-column>
                <el-table-column label="实践成绩"
                                 prop="PracticeScore" sortable>
                </el-table-column>
                <el-table-column label="预计考试时间"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.PlanExamDate!=''&&scope.row.PlanExamDate!=null">{{changeDate(scope.row.PlanExamDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="考试地点"
                                 prop="ExamPlace" sortable>
                </el-table-column>
                <el-table-column label="状态"
                                 prop="ExamStatus" sortable>
                </el-table-column>
                <el-table-column label="复审"
                                 prop="IsReview" sortable>
                </el-table-column>
                <el-table-column label="考试规则"
                                 prop="RuleName" sortable>
                </el-table-column>
                <el-table-column label="科目"
                                 prop="SubjectName" sortable>
                </el-table-column>
                <el-table-column label="考试类型"
                                 prop="TypeName" sortable>
                </el-table-column>
                <el-table-column label="本次申请等级"
                                 prop="ApplicationLevel" sortable>
                </el-table-column>
                <el-table-column label="最高可考技能"
                                 prop="ApplicationLevel" sortable>
                </el-table-column>
                <el-table-column label="是否符合技能"
                                 prop="IsAchment" sortable>
                </el-table-column>

            </el-table>

        </el-dialog>
        <!-- #endregion -->
    </div>
</div>
<script src="~/Scripts/Vue/Vue.js"></script>
<script src="~/Scripts/Vue/axios.js"></script>
<script src="~/Scripts/elementUI/lib/index.js"></script>
<script src="~/Scripts/Vue/polyfill.min.js"></script>
<script type="text/javascript">
    new Vue({
        el: '#app',
        data: {
            dialogFormVisible: false,
            dialogFormPractical: false,
            dialogUpdateVisible: false,
            dialogSearchVisible: false,
            form: [],
            ListExamUserDetailInfos:[],
            formLabelWidth: '120px',
            search: '',
            VPracticeInfo: {},
            checkBoxData: [],
            LRules: [],
            VAuditCheck: {},
            LExamUserDetailInfo:[],
            LPracticeInfo: [],
            LSignedupUser:[]
        },
        mounted: function () {
            this.getdata();
        },
        created() {
            this.initData({});
        },
        methods: {
            changeFun(val) {
                var _this = this;
                _this.checkBoxData = val;
            },
            dataSearch() {
                this.getListByDataTime();
            },
            async initData(data) {
                //获取当前时间
                var now = new Date();
                var monthn = now.getMonth() + 1;
                var yearn = now.getFullYear();
                var dayn = now.getDate();
                var h = now.getHours();
                var m = now.getMinutes();
                var s = now.getSeconds();
                this.selectDatetime = yearn + "-" + monthn + "-" + dayn + " " + h + ":" + m + ":" + s;

                this.selectUser = parseInt(sessionStorage.getItem("userid"));
                this.getListByDataTime();
            },
            async getListByDataTime(data) {

            },
            //批量更新操作
            handleUpdate() {

                var _this = this;
                _this.dialogUpdateVisible = true;
                _this.VAuditCheck.Users = '';
                _this.checkBoxData.forEach(function (item) {
                    var c = item['UserName'];
                    if (c != '' && c != 'undefined') {
                        _this.VAuditCheck.Users += c + "和";
                    }

                })
            }, 
            handleSave() {
                var _this = this;
                _this.checkBoxData.forEach(function (item) {
                    item['IsExam'] = _this.VAuditCheck.IsExam;
                    item['RuleName'] = _this.VAuditCheck.RuleName;
                    item['ExamStatus'] = 'Signup';
                })
                axios.post('/PEMain/InsertUserDetail', {
                    model: _this.checkBoxData
                }).then(function (res) {
                    if (res.data.Result != '') {
                        _this.$message.error(res.data.Result);
                    } else {
                        //_this.ListExamUserDetailInfos = res.data.ListExamUserDetailInfos;
                        _this.LSignedupUser = res.data.LSignedupUser;
                        _this.dialogUpdateVisible = false;
                    }
                   
                });
               
            },
            //上传实践操作
            handlePractical(usercode,username) {
                var _this = this;
                _this.VPracticeInfo.UserCode = usercode;
                _this.VPracticeInfo.UserName = username;
                axios.post('/PEMain/SearchPracticeByCode', {
                    model: usercode
                }).then(function (res) {
                    _this.LPracticeInfo = res.data.LPracticeInfo;
                });
                _this.dialogFormPractical = true;
            },
            handlePracticalSave(flag) {
                var _this = this;

                axios.post('/PEMain/SavePracticeInfo', {
                    model: _this.VPracticeInfo
                }).then(function (res) {
                    _this.VPracticeInfo = {};
                });
                _this.dialogFormVisible = false
            },
            handleAannexSuccess(Result) {
                var _this = this;
                _this.VPracticeInfo.Enclosure = Result.fileName;
                console.log(Result.fileName, 11);
                console.log(_this.VPracticeInfo.Enclosure, 22);
            },
            //查询明细
            handleSearchDetail(usercode) {
                var _this = this;
                axios.post('/PEMain/SerachDetail', {
                    model: usercode
                }).then(function (res) {
                    _this.LExamUserDetailInfo = res.data.LExamUserDetailInfo;
                    console.log(_this.LExamUserDetailInfo, 5555);

                    });
                _this.dialogSearchVisible = true;
            },
            handleDelete(index, row) {
                var _this = this;
                var ID = index;
                axios.post('/PEMain/DeleteTypeInfo', {
                    ID: ID
                }).then(function (res) {
                    _this.LexamType = res.data.LexamType;
                    this.VexamType = {};
                    _this.ExamName = '';
                });
                _this.dialogFormVisible = false
            },
            handleStop(ID) {
                var _this = this;
                axios.post('/PEMain/StopUser', {
                    model: ID
                }).then(function (res) {
                    //_this.ListExamUserDetailInfos = res.data.ListExamUserDetailInfos;
                    _this.LSignedupUser = res.data.LSignedupUser;
                });
            },
            changeDate: function (dates) {
                var date = new Date(parseInt(dates.replace("/Date(", "").replace(")/", ""), 10));
                Y = date.getFullYear() + '-';
                M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
                D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';
                h = (date.getHours() < 10 ? '0' + (date.getHours()) : date.getHours()) + ':';
                m = (date.getMinutes() < 10 ? '0' + (date.getMinutes()) : date.getMinutes()) + ':';
                s = (date.getSeconds() < 10 ? '0' + (date.getSeconds()) : date.getSeconds());
                var NewDtime = Y + M + D + h + m + s;
                var listDate = new Date(date);
                var year = listDate.getFullYear();
                var mon = listDate.getMonth() + 1;
                var day = listDate.getDate();
                //console.log(new Date(date).getFullYear())
                return year + '-' + mon + '-' + day;
            },
            getdata: function () {
                var _this = this;
                axios.post('/PEMain/GetSupervisorAuditUser').then(function (responese) {
                    _this.ListExamUserDetailInfos = responese.data.ListExamUserDetailInfos;
                    _this.LRules = responese.data.LRules;
                    _this.LSignedupUser = responese.data.LSignedupUser;
                })
            }
        }

    })


</script>

