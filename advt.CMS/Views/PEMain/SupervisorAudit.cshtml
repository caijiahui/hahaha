@model advt.CMS.Models.ExamModel.SupervisorAuditModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #app {
        padding: 20px 30px
    }
</style>
<div id="app" style="margin-left:20px">
    <template>
        <el-breadcrumb separator="/" style="margin-top:20px;margin-bottom:20px">
            <el-breadcrumb-item>考试管理</el-breadcrumb-item>
            <el-breadcrumb-item>主管审核</el-breadcrumb-item>
        </el-breadcrumb>

    </template>
    <div>
        <el-select v-model="TypeNames" placeholder="请选择考试类型">
            <el-option v-for="item in LExamType" :key="item.Key" :label="item.Value" :value="item.Key"></el-option>
        </el-select>
        <el-button slot="append" @@click="SearchinByTypeName">Search</el-button>
        <el-tabs v-model="activeName">
            <el-tab-pane label="可报名人员" name="first">
            </el-tab-pane>
            <el-tab-pane label="主管审核通过人员" name="Two">
            </el-tab-pane>
        </el-tabs>
        <div v-show="activeName=='first'">
            <div style="float:left;margin-bottom:20px">
                <template>
                    <div style="float:left;">
                        <el-upload class="upload-demo"
                                   ref="upload"
                                   :multiple="false"
                                   :on-success="handleExcelSuccess"
                                   action="/PEMain/Upload_TEL_Practice">
                            <el-button size="small" type="primary"><i class="el-icon-folder-add"></i> 汇入实践</el-button>
                        </el-upload>

                    </div>
                    <div style="float:left;margin-left:20px">
                        <a href="/Attachment/temp/Template/Importpractice.xlsx">
                            <el-button size="small" type="primary"><i class="el-icon-download"></i> 实践模板</el-button>
                        </a>
                    </div>
                    <div style="float:left;margin-left:20px">
                        <el-button size="small" type="primary" @@click="handleUpdate()">报名</el-button>
                    </div>
                </template>
            </div>
            <div style="clear:both">
                <template>
                    <el-table :data="LCheckAudtiUser"
                              style="width: 100%;margin-top:20px " border @@selection-change="changeFun">
                        <el-table-column type="selection">
                        </el-table-column>
                        <el-table-column label="考试类型"
                                         prop="TypeName" sortable>
                        </el-table-column>
                        <el-table-column label="考试科目"
                                         prop="SubjectName" sortable v-if="LCheckAudtiUser.TypeName=='关键岗位技能等级'">
                        </el-table-column>
                        <el-table-column label="姓名"
                                         prop="UserName" sortable>
                        </el-table-column>
                        <el-table-column label="部门"
                                         prop="DepartCode" sortable>
                        </el-table-column>
                        <el-table-column label="工号"
                                         prop="UserCode" sortable>
                        </el-table-column>
                        <el-table-column label="考试规则"
                                         prop="RuleName" sortable v-if="LCheckAudtiUser.TypeName=='关键岗位技能等级'">
                        </el-table-column>
                        <el-table-column label="最高可考技能"
                                         prop="HighestLevel" sortable v-if="LCheckAudtiUser.TypeName=='关键岗位技能等级'">
                        </el-table-column>
                        <el-table-column label="本次申请等级"
                                         prop="ApplyLevel" sortable v-if="LCheckAudtiUser.TypeName=='关键岗位技能等级'">
                        </el-table-column>
                        <el-table-column label="预计考试时间"
                                         sortable>
                        </el-table-column>
                        <el-table-column label="实践成绩" prop="TheoreticalAchievement"
                                         sortable>

                        </el-table-column>
                        <el-table-column fixed="right"
                                         label="操作"
                                         width="240">
                            <template slot-scope="scope">

                                <el-button size="mini"
                                           @@click="handlePractical(scope.row.UserCode,scope.row.UserName,scope.row.ApplyLevel,scope.row.SubjectName,scope.row.TypeName)">实践</el-button>
                                <el-button size="mini"
                                           @@click="handleSearchDetail(scope.row.UserCode,scope.row.UserName)">历史</el-button>
                                <el-button size="mini"
                                           @@click="handleStop(scope.row.ID)">取消</el-button>
                            </template>
                        </el-table-column>
                    </el-table>
                </template>
            </div>

        </div>
        <div v-show="activeName=='Two'">
            <el-table :data="LSignedupUser"
                      style="width: 100%;margin-top:20px " border @@selection-change="changeFun">
                <el-table-column label="状态"
                                 prop="ExamStatus">
                    <template slot-scope="scope">
                        <el-tag type="success" v-if="scope.row.ExamStatus=='Signup'">已报名</el-tag>
                    </template>
                </el-table-column>
                <el-table-column label="考试类型"
                                 prop="TypeName" sortable>
                </el-table-column>
                <el-table-column label="姓名"
                                 prop="UserName" sortable>
                </el-table-column>
                <el-table-column label="部门"
                                 prop="DepartCode" sortable>
                </el-table-column>
                <el-table-column label="工号"
                                 prop="UserCode" sortable>
                </el-table-column>

                <el-table-column label="最高可考技能"
                                 prop="HighestLevel" sortable>
                </el-table-column>
                <el-table-column label="本次申请等级"
                                 prop="ApplyLevel" sortable>
                </el-table-column>
                <el-table-column label="考试时间"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.ExamDate!=''&&scope.row.ExamDate!=null">{{changeDate(scope.row.ExamDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="考试规则"
                                 prop="RuleName" sortable>
                </el-table-column>
                <el-table-column fixed="right"
                                 label="操作">
                    <template slot-scope="scope">

                        <el-button size="mini"
                                   @@click="handleStop(scope.row.ID)">取消</el-button>
                        <el-button size="mini"
                                   @@click="handleSearchDetail(scope.row.UserCode,scope.row.UserName)">历史</el-button>

                    </template>
                </el-table-column>
            </el-table>
        </div>
        <!-- #region 上传实践弹窗 -->
        <el-dialog title="上传实践" :visible.sync="dialogFormPractical" :close-on-click-modal="false">
            <el-form :inline="true" :model="VPracticeInfo" class="demo-form-inline" :rules="PracRule" ref="dialogForm">
                <el-form-item label="工号">
                    <el-input v-model="VPracticeInfo.UserCode" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="姓名">
                    <el-input v-model="VPracticeInfo.UserName" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="技能">
                    <el-input v-model="VPracticeInfo.SkillName" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="考试类型">
                    <el-input v-model="VPracticeInfo.TypeName" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="考试科目">
                    <el-input v-model="VPracticeInfo.SubjectName" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item label="有效期">
                    <el-date-picker v-model="VPracticeInfo.ValidityDate" type="date" placeholder="选择日" @@change="dataSearch" value-format="yyyy-MM-dd"></el-date-picker>
                </el-form-item>
                <el-form-item label="成绩" prop="PracticeScore">
                    <el-input v-model="VPracticeInfo.PracticeScore" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="备注">
                    <el-input type="textarea" :cols="40" v-model="VPracticeInfo.PracticeRemark" autocomplete="off" :label-width="100"></el-input>
                </el-form-item>
                <el-form-item label="上传附件">
                    <el-input v-model="VPracticeInfo.Enclosure" autocomplete="off" :disabled="true"></el-input>
                </el-form-item>
                <el-form-item>
                    <el-upload class="upload-demo"
                               ref="upload"
                               :multiple="false"
                               :on-success="handleAannexSuccess"
                               action="/PEMain/Upload_Supervisor">
                        <template>
                            <el-button size="small" type="primary">上传</el-button>
                        </template>
                    </el-upload>
                </el-form-item>

            </el-form>
            <el-table :data="LPracticeInfo"
                      style="width: 100%;margin-top:20px " border @@selection-change="changeFun">
                <el-table-column label="姓名"
                                 prop="UserName" sortable
                                 fixed>
                </el-table-column>
                <el-table-column label="工号"
                                 prop="UserCode" sortable>
                </el-table-column>
                <el-table-column label="有效期"
                                 prop="ValidityDate" sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.ValidityDate!=''&&scope.row.ValidityDate!=null">{{changeDate(scope.row.ValidityDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="分数"
                                 prop="PracticeScore" sortable>

                </el-table-column>
                <el-table-column label="备注"
                                 prop="PracticeRemark" sortable>
                </el-table-column>
                <el-table-column label="附件"
                                 prop="Enclosure" sortable>
                    <template slot-scope="scope">
                        @*v-if="scope.row.Enclosure!=''*@
                        <span v-if="scope.row.Enclosure!=''&&scope.row.Enclosure!=null"> <a :href="'/Attachment/Practice/'+scope.row.Enclosure"> <i class="el-icon-download"></i></a></span>
                    </template>
                </el-table-column>
                <el-table-column label="考试类型"
                                 prop="TypeName" sortable>
                </el-table-column>
                <el-table-column label="考试科目"
                                 prop="SubjectName" sortable>
                </el-table-column>
                <el-table-column label="技能"
                                 prop="SkillName" sortable>
                </el-table-column>
                <el-table-column label="创建人"
                                 prop="CreateUser" sortable>
                </el-table-column>
                <el-table-column label="创建时间"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.CreateDate!=''&&scope.row.CreateDate!=null">{{changeDate(scope.row.CreateDate)}}</span>
                    </template>
                </el-table-column>
            </el-table>
            <div slot="footer" class="dialog-footer">
                <template>
                    <el-button @@click="dialogFormPractical = false">取 消</el-button>
                    <el-button type="primary" @@click="handlePracticalSave('save')">保存</el-button>
                </template>

            </div>
        </el-dialog>
        <!-- #endregion -->
        <!-- #region 批量更新 -->
        <el-dialog title="信息编辑" :visible.sync="dialogUpdateVisible" :close-on-click-modal="false">
            <el-form :model="VAuditCheck">
                <el-form-item label="人员" :label-width="formLabelWidth">
                    <el-input v-model="VAuditCheck.Users" autocomplete="off" :disabled="true"></el-input>
                </el-form-item>

                <el-form-item label="是否报名" :label-width="formLabelWidth">
                    <el-checkbox :check="true" v-model="VAuditCheck.IsExam"></el-checkbox>
                </el-form-item>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <template>
                    <el-button @@click="dialogUpdateVisible = false">取 消</el-button>
                    <el-button type="primary" @@click="handleSave()">确 定</el-button>
                </template>

            </div>

        </el-dialog>
        <!-- #endregion -->
        <!-- #region 查看明细 -->
        <el-dialog title="明细查看" :visible.sync="dialogSearchVisible" :close-on-click-modal="false">
            <el-table :data="LExamUserDetailInfo"
                      style="width: 100%;margin-top:20px " border @@selection-change="changeFun" :rules="ruleform">
                <el-table-column label="考试类型"
                                 prop="TypeName" sortable>
                </el-table-column>
                <el-table-column label="科目"
                                 prop="SubjectName" sortable>
                </el-table-column>
                <el-table-column label="姓名"
                                 prop="UserName" sortable>
                </el-table-column>
                <el-table-column label="工号"
                                 prop="UserCode" sortable>
                </el-table-column>
                <el-table-column label="部门"
                                 prop="DepartCode" sortable>
                </el-table-column>
                <el-table-column label="职等"
                                 prop="RankName" sortable>
                </el-table-column>
                <el-table-column label="技能"
                                 prop="SkillName" sortable>
                </el-table-column>
                <el-table-column label="入职日"
                                 prop="EntryDate" sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.EntryDate!=''&&scope.row.EntryDate!=null">{{changeDate(scope.row.EntryDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="绩效"
                                 prop="Achievement" sortable>
                </el-table-column>
                <el-table-column label="考试时间"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.ExamDate!=''&&scope.row.ExamDate!=null">{{changeDate(scope.row.ExamDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="考试成绩"
                                 prop="ExamScore" sortable>
                </el-table-column>
                <el-table-column label="实践成绩"
                                 prop="PracticeScore" sortable>
                </el-table-column>
                <el-table-column label="预计考试时间"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.PlanExamDate!=''&&scope.row.PlanExamDate!=null">{{changeDate(scope.row.PlanExamDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="考试地点"
                                 prop="ExamPlace" sortable>
                </el-table-column>
                <el-table-column label="状态"
                                 prop="ExamStatus" sortable>
                </el-table-column>
                <el-table-column label="复审"
                                 prop="IsReview" sortable>
                </el-table-column>
                <el-table-column label="考试规则"
                                 prop="RuleName" sortable>
                </el-table-column>
                <el-table-column label="申请等级"
                                 prop="ApplyLevel" sortable>
                </el-table-column>
                <el-table-column label="最高可考技能"
                                 prop="HighestLevel" sortable>
                </el-table-column>
                <el-table-column label="符合绩效"
                                 prop="IsAchment" sortable>
                </el-table-column>
                <el-table-column label="报名日期"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.HrCreateDate!=''&&scope.row.HrCreateDate!=null">{{changeDate(scope.row.HrCreateDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="报名人"
                                 prop="HrCreateUser" sortable>
                </el-table-column>
                <el-table-column label="主管审核"
                                 prop="DirectorCreateUser" sortable>
                </el-table-column>
                <el-table-column label="主管日期"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.DirectorCreateDate!=''&&scope.row.DirectorCreateDate!=null">{{changeDate(scope.row.DirectorCreateDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="Hr审核"
                                 prop="HrCheckCreateUser" sortable>
                </el-table-column>
                <el-table-column label="Hr日期"
                                 sortable>
                    <template slot-scope="scope">
                        <span v-if="scope.row.HrCheckCreateDate!=''&&scope.row.HrCheckCreateDate!=null">{{changeDate(scope.row.HrCheckCreateDate)}}</span>
                    </template>
                </el-table-column>
                <el-table-column label="中止"
                                 prop="IsStop" sortable>
                    <template slot-scope="scope">
                        {{ChangeAch(scope.row.IsStop)}}
                    </template>
                </el-table-column>

            </el-table>

        </el-dialog>
        <!-- #endregion -->
    </div>
</div>
<script src="~/Scripts/Vue/Vue.js"></script>
<script src="~/Scripts/Vue/axios.js"></script>
<script src="~/Scripts/elementUI/lib/index.js"></script>
<script src="~/Scripts/Vue/polyfill.min.js"></script>
<script type="text/javascript">
    new Vue({
        el: '#app',
        data: {
            dialogFormVisible: false,
            dialogFormPractical: false,
            dialogUpdateVisible: false,
            dialogSearchVisible: false,
            form: [],
            LCheckAudtiUser: [],
            LExamType: [],
            LExamSubject: [],
            Subjects: '',
            TypeNames: '',

            formLabelWidth: '120px',
            search: '',
            VPracticeInfo: {},
            checkBoxData: [],
            LRules: [],
            VAuditCheck: {},
            LExamUserDetailInfo: [],
            LPracticeInfo: [{
                PracticeScore: 0

            }],
            LSignedupUser: [],
            activeName: 'first',
            ruleform: {
                PracticeScore: [
                    { required: true, message: '请输入实践成绩', trigger: 'blur' }
                ]
            },
            PracRule: {
                PracticeScore: [
                    { required: true, message: '必填', trigger: 'blur' }

                ]
            },
        },

        mounted: function () {
            this.getdata();
        },
        created() {
            this.initData({});
        },
        methods: {
            changeFun(val) {
                var _this = this;
                _this.checkBoxData = val;
            },
            dataSearch() {
                this.getListByDataTime();
            },
            async initData(data) {
                //获取当前时间
                var now = new Date();
                var monthn = now.getMonth() + 1;
                var yearn = now.getFullYear();
                var dayn = now.getDate();
                var h = now.getHours();
                var m = now.getMinutes();
                var s = now.getSeconds();
                this.selectDatetime = yearn + "-" + monthn + "-" + dayn + " " + h + ":" + m + ":" + s;

                this.selectUser = parseInt(sessionStorage.getItem("userid"));
                this.getListByDataTime();
            },
            async getListByDataTime(data) {

            },
            //批量更新操作
            handleUpdate() {

                var _this = this;
                _this.dialogUpdateVisible = true;
                _this.VAuditCheck.Users = '';
                _this.VAuditCheck.IsExam = true;
                _this.checkBoxData.forEach(function (item) {
                    var c = item['UserName'];
                    if (c != '' && c != 'undefined') {
                        _this.VAuditCheck.Users += c + "和";
                    }

                })
            },
            //批量上传实践
            handleImportPrac() {
                var _this = this;

            },
            handleExcelSuccess(Result) {
                var _this = this;
                this.$message({
                    message: Result.Result,
                    type: 'success'
                });
            },           
            handleSave() {
                var _this = this;
                axios.post('/PEMain/InsertUserDetail', {
                    model: _this.checkBoxData
                }).then(function (res) {
                    if (res.data.Result != '') {
                        _this.$message.error(res.data.Result);
                    } else {
                        _this.LCheckAudtiUser = res.data.LCheckAudtiUser;
                        _this.LSignedupUser = res.data.LSignedupUser;
                        _this.dialogUpdateVisible = false;
                        _this.VAuditCheck.IsExam = '';
                        _this.VAuditCheck.RuleName = '';
                    }

                });
                //_this.$refs.dialogForm.validate(function (v) {
                //    if (v) {
                //        axios.post('/PEMain/InsertUserDetail', {
                //            model: _this.checkBoxData
                //        }).then(function (res) {
                //            if (res.data.Result != '') {
                //                _this.$message.error(res.data.Result);
                //            } else {
                //                _this.LCheckAudtiUser = res.data.LCheckAudtiUser;
                //                _this.LSignedupUser = res.data.LSignedupUser;
                //                _this.dialogUpdateVisible = false;
                //                _this.VAuditCheck.IsExam = '';
                //                _this.VAuditCheck.RuleName = '';
                //            }

                //        });
                //    }

                //})
            },
            //上传实践操作
            handlePractical(usercode, username, ApplyLevel, SubjectName, TypeName) {
                var _this = this;
                _this.VPracticeInfo.UserCode = usercode;
                _this.VPracticeInfo.UserName = username;
                _this.VPracticeInfo.SkillName = ApplyLevel;
                _this.VPracticeInfo.SubjectName = SubjectName;
                _this.VPracticeInfo.TypeName = TypeName;
                axios.post('/PEMain/SearchPracticeByCode', {
                    model: usercode
                }).then(function (res) {
                    _this.LPracticeInfo = res.data.LPracticeInfo;
                });
                _this.dialogFormPractical = true;
            },
            handlePracticalSave(flag) {
                var _this = this;
                _this.$refs.dialogForm.validate(function (v) {
                    if (v) {
                        axios.post('/PEMain/SavePracticeInfo', {
                            model: _this.VPracticeInfo
                        }).then(function (res) {
                            _this.VPracticeInfo = {};
                        });
                        _this.dialogFormPractical = false
                    }


                })

            },
            handleAannexSuccess(Result) {
                var _this = this;
                _this.VPracticeInfo.Enclosure = Result.fileName;
                console.log(Result.fileName, 11);
                console.log(_this.VPracticeInfo.Enclosure, 22);
            },
            //查询明细
            handleSearchDetail(usercode) {
                var _this = this;
                axios.post('/PEMain/SerachDetail', {
                    model: usercode
                }).then(function (res) {
                    _this.LExamUserDetailInfo = res.data.LExamUserDetailInfo;
                    console.log(_this.LExamUserDetailInfo, 5555);

                });
                _this.dialogSearchVisible = true;
            },
            handleDelete(index, row) {
                var _this = this;
                var ID = index;
                axios.post('/PEMain/DeleteTypeInfo', {
                    ID: ID
                }).then(function (res) {
                    _this.LexamType = res.data.LexamType;
                    this.VexamType = {};
                    _this.ExamName = '';
                });
                _this.dialogFormVisible = false
            },
            handleStop(ID) {
                var _this = this;
                _this.$confirm('此操作将取消人员考试资格,请确认是否执行', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    axios.post('/PEMain/StopUser', {
                        model: ID
                    }).then(function (res) {
                        _this.LCheckAudtiUser = res.data.LCheckAudtiUser;
                        _this.LSignedupUser = res.data.LSignedupUser;
                    });
                }).catch(() => {
                    _this.$message({
                        type: 'info',
                        message: '已取消操作'
                    });
                });

            },
            ChangeAch: function (ach) {
                if (ach == false) {
                    return "否";
                }
                else if (ach == true) {
                    return "是";
                }
            },
            changeDate: function (dates) {
                var date = new Date(parseInt(dates.replace("/Date(", "").replace(")/", ""), 10));
                Y = date.getFullYear() + '-';
                M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
                D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';
                h = (date.getHours() < 10 ? '0' + (date.getHours()) : date.getHours()) + ':';
                m = (date.getMinutes() < 10 ? '0' + (date.getMinutes()) : date.getMinutes()) + ':';
                s = (date.getSeconds() < 10 ? '0' + (date.getSeconds()) : date.getSeconds());
                var NewDtime = Y + M + D + h + m + s;
                var listDate = new Date(date);
                var year = listDate.getFullYear();
                var mon = listDate.getMonth() + 1;
                var day = listDate.getDate();
                //console.log(new Date(date).getFullYear())
                return year + '-' + mon + '-' + day;
            },
            //查找考试类型下的人员
            SearchinByTypeName() {
                var _this = this;
                axios.post('/PEMain/SearchAuditUserByType', {
                    subject: _this.TypeNames
                }).then(function (responese) {
                    _this.LCheckAudtiUser = responese.data.LCheckAudtiUser;
                    _this.LRules = responese.data.LRules;
                    _this.LSignedupUser = responese.data.LSignedupUser;
                    _this.LExamType = responese.data.LExamType;
                });
            },
            getdata: function () {
                var _this = this;
                axios.post('/PEMain/GetSubjectInfo').then(res => {
                    _this.LExamType = res.data.LExamType;
                })
                axios.post('/PEMain/SearchAuditUserByType', {
                    subject: _this.TypeNames
                }).then(function (responese) {
                    _this.LCheckAudtiUser = responese.data.LCheckAudtiUser;
                    _this.LRules = responese.data.LRules;
                    _this.LSignedupUser = responese.data.LSignedupUser;
                    _this.LExamType = responese.data.LExamType;
                });

            }
        }

    })


</script>

